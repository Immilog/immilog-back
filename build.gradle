plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    // JdbcClient
    implementation 'org.springframework:spring-jdbc:6.1.0'  // 스프링 프레임워크의 JdbcClient 관련 의존성

    // MySQL connector
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Testing libraries
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    // Lombok for code generation
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT (JSON Web Token) for authentication
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // AWS SDK for S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.13'

    // Thymeleaf template engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // OpenAPI/Swagger for API documentation (springdoc)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

def generatedDir = "$buildDir/main/generated"

tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file(generatedDir)
}
